0803
to do:

当当订书（农行）


0802
上午：重新查阅所有single scattering相关的文献，想办法做可编辑的single scattering。但是multiple scattering也得编辑吧，否则一个编辑，一个不编辑，不合情理。
需要读paper来学习如何解析化：biri04, hanrahan93, sun05
下午：解析化单次散射，做实验。完了后解析化多次散射，不行就不做多次散射了。

ideas:
quick:
#by taylor or log Rd, decouple Rd's r and other paras, so that Ld = (paras)*(or sth) * 
precIntegration(r). or/and by same means, let L(1)'s sigmaT out of integration.
#find Precomputed phase or sth, but not tensor
#利用tree加速
#Wang05篇末提到的：reuse illumination samples!!!

modifying:
#neibor(xo) instead of integration(Rd(xi,xo))'s all xi, [Hao]'s direct application。利用hao的才能实时编辑MS。
#在相片里写字: Fontshop: a photograph editing tool
#image based translucency scattering

from 0:
#spline knot-based rendering and volume scattering integration 

not interested:
photon mapping heterogeneous(inhomogeneous)

0801
今天作息不好，昏睡中低落度过，精力不济也和昨天xx有关。
今天早睡，明天送jj！

0731
to do:
1, 优化代码，使能够很快地算多次散射（不用优化也已达到）
2, 在理论上给出公式
3，写文章，或挖掘更深的东西


0730
Vec3 xi = m_accessObj.m_pModel->vpVertices[i + 1];
m_accessObj.m_pModel->vpVertexNormals[i + 1].x *= PerlinNoise3D(xi.x, xi.y, xi.z, 2, 2, 6);
	minmin	-0.68881094	float
	maxmax	0.58787721	float
	float delta =  PerlinNoise3D(xi.x, xi.y, xi.z, 2, 2, 6);
Tone 出来的最好的结果：（泛红）
fRd.x = fRd.x + fRd.x * delta * 0.4f;
fRd.y = fRd.y + fRd.y * delta * 0.01f;
fRd.z = fRd.z + fRd.z * delta * 0.4f;

0729
work tonight: code out heretogeneous translucency! and write paper on that,
claiming "a complete translucency model including BRDF, BSSRDF(Multiple and single), heterogeneous texture"!!!


半透明体纹理：如海里的珊瑚
fractal/perlin heretogeneous+Wang05's BRDF+BSSRDF animation: c&g

0727 
todo:
Fresnel;
改进论文。
现有的想法：
#spline knot-based rendering and volume scattering integration 
#image based translucency scattering
#neibor(xo) instead of integration(Rd(xi,xo))'s all xi, [Hao]'s direct application
#by taylor or log Rd, decouple Rd's r and other paras, so that Ld = (paras)*(or sth) * precIntegration(r). or/and by same means, let L(1)'s sigmaT out of integration.
#study on fresnel's effect on final results.
#PPT
#在相片里写字: Fontshop: a photograph editing tool
#paper-cut with fractal patterns 

0726
要想slab有影子，objsize起码要在10以上，否则MS光都直接scatter过去了

0725
东方人发质特性是粗黑硬重，因含碳、氢粒子较大较多，所以颜色深。 西方人发质的特性是轻柔细软，因含碳氢较少，所以颜色较淡.

0723
debugged of rendering 's TL(0.0.0)'s position. finished basic verifying.
to do:
1.5，改Td和E的存取
2, shader render
1, trans compression加速
3, bilinear itpl
4, fresnel debug
5, more N than 11
加了压缩transport之后，速度降为43s/100v

0722
Debugged.

0721
目前结果：
g = -0.5->0:backward scattering越来越暗，只能通过scale亮度看到0-255之间的结果。forward scattering基本上没有。g = 0->+0.5: forward scattering越来越亮，只能scale。backward scattering基本没有。
why没有？不知如何解释。怀疑：1，是我g还是求错了。但g=0能正确啊？所以2，我这种hg采样、存储方式根本不适合tensor近似。从rec hg.pfm形态上看，边角的都不对，没有连续性，要命。
solution:换采样方式(theta-phi..)；换存放方式(re-order..)；换压缩方式(half angle..)；换读取方式(bilinear..)。
问题：
1, HG精度不够，要插值
2, 要多些g，11个不行，而且g靠近0时最好多采些。最好加入别的HG。

没有在pass2，3处glDisable(depthtest),导致pass2、3画的是同一个2d 正方形，结果pass3因为默认depthtest=less而被冲掉，根本没有画上那个正方形，自然就得不到t1了。
to do:加速。现在43s/100vertex，是msra时间的4倍。按说只应2倍，因为8个MRT了。
to do：
1, vbo 正方形
2，多个fbo，不在循环里切换texture.

0720
to do:
1, svd(HG6144):没有用，tensor matlab做不了！还是想双线插吧：g, h都能双线插。

#reverse pass2 and pass3: still "latter black";
pass2: to "glbegin(quad)".."end" black. if it is commented, then pass 3 has effects.
so, suspecious at orders: stencil; fbo.
#Shi's letter:
1. He should report his progresses to you continuously, but not discuss
his work with others. 
2. You may use any part of his work, what you think is useful.
3. His work should not be published until your approval.  
I would like to have your opinions. I hope that you could give his
directions continuously. Besides Yang Ke's PhD thesis topic has not been
fixed yet.  You are right that it is not good for two PhD students to do
thesises with close-related topic. He knows it also.

to do bilinear of gk.


0719
#today I have read several papers, and sorted he mojority of translucent papers.
#to do: let it go to do PPT, as soon as possible. and during the period, find out as much ideas as possible.
#dragon10k's Tk: 14s*100hundred vert= 1408s.

0718
#PPT equations are worked out. but Zhou Kun doesn't let me do that. Now wait for Shi.
#I've tested my learning strengths: Intrapersonal Intelligence; Musical/Rhythmic Intelligence
what can I do?
#My other 2 ideas: 1, Image-based material editing. 2, Textureshop again...
# RMSE: root mean square , sqrtf(sigma(x*x)/n). NOTICE:  n is within sqrtf!!!

0715
to do: cpu版本的tensor 预计算、渲染
用light1、box来测，可以先用5x4x3常数矩阵无损做出来。可先用matlab做一套groundtruth常数以供对比。
1. 4term tensor预计算、渲染
2. 8term tensor预计算、渲染
#Tsr3: L-> V -> H major. L is most major.

0714
to do:
deduce equation of PPT
plan CPU version of PPT
(GPU version of PPT)
16res, 8-term看rec.hg形态不错，但没法用，因为必须svd近似，又会伤精度。只能直接tensor绘制出来。8term形态

0713
#rmse made mistake finally. re-run.
#8x8x3反而比x4好，然后5回到3，6、8又回到4，所以用8x8x3对384x11(0.5)最好。8x8x3刚好能将+-0.5保持到30%的误差.
#release 会忽略所有的Trace n宏
#to do: 
1.看看离线tensor的rec +-0.5的绘制效果怎样。如果4-term就非常好了(都还没有动用8x8x3,光4x4x3和orig视觉上并无二致），就进行2；如果只是勉强可以接受，则3，4。基于4term的效果，综合rmse曲线，估计8term的效果。
2.看看离线tensor压到0.6/0.7的误差怎样，恢复结果怎样。如果还能接受，则可以压更多。
用8位res看效果不起作用。需要用16位，用box100，对比昨晚的origHG结果。然后今晚跑些大结果，比如tweety2k, (31k)
3.写8-term预计算的代码。刚好让显卡render2遍。从设计plan到code。测试正确。
4.比较离线tensor在8x8x4和8x8x3的绘制效果，离线跑出prototype demo，考核t31k，bunny等的最终结果。
5.写online tensor triple product的代码，online跑出prototype demo，应该和离线效果完全相同。(因为离线tensor里做的light*view*n*core就是shader online代码要写的内容)
6.milestone achieved,进行下一步研究，focus在将PPT完整化上(其余idea以后在其它paper中实现)。

0712
#"array will contain at most 70 characters" means I should reserve array as char a[71]!!!
#hg term 1->4 : brighter 
#单hg svd误差分析：4term可将+-0.4之内误差恢复到30%之内，8term+-0.5 30%
#从hg的maxmin看，+-50之间的tensor将很好恢复。先做个11层的tensor，1536X1536X11 -> 4x4x3
#又发现了一个大bug：subTsr没用，用成了sub。这影响tensorRMSE最后一行，整体误差，which is not used yet

0711
#firewall correct!
#hgH 16 32 25错！ -0.25 right. +0.25wrong! my debugging ability is coming back!!
#char* ends with 0. not '0', '\0', or anything else. Just use "memset(pt, 0, len);" to preset all bits with ending. then process first unknown bits in pt, and cout<<pt will correctly end ahead of useless bits.

0710
firewall still incorrect

0707
hg和以前不一样？hg-0.90:0.10:+0.90, 19张，pass肉眼test

1. 生成g-0.9 :0.1 : 0.9, 20个.hg文件; (res=8, n1=6*res*res=384)
2. relRMSE 每一个, term 1-24
matlab里：
3. (normalize each .hg)有必要吗？
4. tensor 成core，用matlab(一步步测试过去)
5. tensor恢复，看rel RMSE
vc代码里：
6. 不恢复，而是直接在vc代码里点乘。
7. 将渲染移植到shader里

to do:
1, t600, 点光源，不同g下结果，保存
2，shader render
3，PPT
4，shader里lighg* view*phase* core
5, change phase


#tc paper
#
#读关键的几个paper，和这里人讨论
#fbo + gpu 渲染
#fps
#优化各处代码
#arcball light 控制
#obj.能load group,使能bird下加一板
#若多term的效果对比明显则整理tensor思路，做设计文档
#visib downsample
#Quantize: ONLY spacity Td store, no other things
#在shader里手写linear of gk，这样就不会有条纹了。简单。
#fbo + gpu dm//fast, so currently no need

0704
#读vs，fs时  error C0000: syntax error, unexpected $end at token "<null atom>"
 error C0501: type name expected at token "<null atom>"
把linebreak读成了字符，成为错误
solution：用	memset(ShaderSource, 0, len + 1);file.read((char*)ShaderSource, len);
代替	while (file.good())ShaderSource[i++] = (GLubyte)file.get(); 

0623
PPT: 6.23,24: paper reading, 25,26,27,28,29,30: implement PTT. 7.1-7.7: write paper
todo:
1. Interactive relighting of anistropic translucent objects using precomputed phase tensor(PPT): 
2 week, 1 week implement, 1 week paper 6.23-7.8
2. 在相片里换透明衣服，比mat editing好: Image-based material replacement with translucent effect
1 month, 3 weeks implement, 1 week paper 7.9-8.9.参考jensen"perceiving translucent.."
3. 在相片里写字: Fontshop: a photograph editing tool
1 month,  3 weeks implement, 1 week paper 8.9-9.9
4. paper-cut with fractal patterns 
1 month,  3 weeks implement, 1 week paper 9.9-10.9
0614
read npr
order ticket
refactor textureshop
realize material editing
0605
#从中文五号word到latex论文，大约缩为1/3的篇幅稍多
#9号晚6点前去新新饭店（岳坟前）；
todo:
修手机；充值；借jj相机；寄修mp3
1.设计路线
2.写出英文论文
3.修手机，mp3,充值（不行就借手机，不能出问题）
4.借相机，准备电池、sd卡
#田超的hair code using old d3d:
> !IFNDEF NODEBUG
> GUILIBS = libcmtd.lib /nodefaultlib:libcmt.lib $(GUILIBS) 
> CONLIBS = libcmtd.lib /nodefaultlib:libcmt.lib $(CONLIBS) 
> !ELSE GUILIBS = libcmt.lib /nodefaultlib:libcmtd.lib 
> $(GUILIBS) CONLIBS = libcmt.lib /nodefaultlib:libcmtd.lib 
> $(CONLIBS) !ENDIF
#//g_pFont->DrawText(pString, strlen(pString), &rect, DT_LEFT, 0xff000000);
g_pFont->DrawText(NULL, pString, strlen(pString), &rect, DT_LEFT, 0xff000000);
//yk if( FAILED( D3DXCreateFont( g_pd3dDevice, hFont,  &g_pFont) ) )
if( FAILED( D3DXCreateFont( g_pd3dDevice, 15, 0, FW_BOLD, 1, FALSE, DEFAULT_CHARSET, 
                         OUT_DEFAULT_PRECIS, DEFAULT_QUALITY, DEFAULT_PITCH | FF_DONTCARE, 
                         "Arial", &g_pFont ) ))
//yk g_pEffect->Pass( 0 );	
g_pEffect->BeginPass( 0 );	
Rendering error LNK2005: _malloc already defined in libcmt.lib(malloc.obj)
自己合并，用latex的tabular
石：报销发票；问鼠标；
设计黄山计划；
0622
9:00讲话，请假6.17-21;(17号晚上22:10的T32去，21晚上17:08的T31回来7:00,到玉泉9:00）
0604
finish chinese version of hair
6.3
2, 找出一篇可以模仿的英文论文，仿写出来，发给他。
3, 让王田给我有vc+显卡的机器,run it
0602
in noisy market-like lab, to earn the truth of my own happiness. that is to focus.
today: machine things; paper 1st pass--ugly,nauseating

0526
#cpu，第一次运行ss预计算，基本对；但昨晚也有不对的tweety2k，状态没清吧。第二次肯定不对，有噪点。所以要关了重开。
#以后一定要写控制台程序，否则跑数据用不了batch，要通宵守着累死人。
#我6800 t31k，3term优化（无fbo重复bind）仍为24s，要命！nvoglnt.dll92％，没有用处！全部瓶颈都在顶点数上！是否需要simplify？？？3term下，t2k 50s。1term情况下，t2k只需45s，但t31k仍为24s，nvoglnt.dll92.84%。不再弄了。
#winedown体验：TangXiaoou东北人，幽默，“胆大”，“坚持move on”，爱情和研究都是。
我问"how to find problems"，都说留心身边，harry也说。不做民间科学家，尽量到环境里来，都靠集体力量才行。不是"aHa"拍脑袋5s想出。harry：“多看看vision等其它方面的paper，把问题正过去、倒过来翻来覆去地想。”
harry：把牙膏挤出来；把牙膏挤回去。多挤挤。来回挤，翻来覆去地挤。
#for bunny20k, 16leaf足矣。

0525
#经验：王睿的geforce6800，现在总是出glDrawBuffer的问题！我要是算CPU的T1，则必须在每次重新运行程序、把doc主窗口开到最前面一动也不动的情况下，才可能算对。
#已加入MS调通。leafsample至多=4才好用，16不行；eps开到0.1即可。

0524
#内存错误；
#第一个顶点不对；因为我是for(vIdx) fb.attach; fb.bind;这样，第一个顶点之前fb没有bind过，当前fbo还是0，所以第一个顶点错。还是怪我自己，不是显卡的bug！！
#今天又栽在depth test上：if glDisable(Depth_TEST)，则"后来覆盖"深度值，不与已画值比较！如果glEnable(depth test)，则与已画值比较！两者都会update depth buffer，除非glDepthMask(gl_FAlse)!

0523
今天浪费时间在：1，g=+0.25, -0.25总是在code里忘了改
2,在.T1C里也常常忘了改文件名。结果1小时大量劳动，不知道对错，得全部从来。
3,关键在生成.T1C时都没有注意分别！
#shader优化：优化前，t2k 10s*25 = 4min(cpu:30s*25=10min)，优化后，t2k 2～3s*25=66s!
t31k，cpu:1night,~=7h. shader:30s*310=150min=2.5h. 优化后：17~18s*310=1.5h!!!
优化的方式：在内层循环中，去掉debug相关函数；不用wrap过的fbo，而直接用EXT；将状态转换(glEnable)降为最小量；
在shader中，(32X32=1024，效率是1000倍的重要！！！）：能用vec的就不用int/float;
尽量少type conversion如float(intA);  尽量少用变量和函数； 将本程序相关确定参数从uniform调为const； （要是能读stencil就好了，就不用readpixel和texImage了，那样会马上快很多。可惜。。）
#因为fbo最多支持mrt=4，我有5个color_attach，测得：两个fbo慢，一个fbo实时换attach快。无法用glDrawbuffer解决，因为有5个，换不开
#优化前,code analysis:75％的nv4...dll, 18%...ogl...
优化后：nv4_disp.dll: 45.96%, nvoglnt.dll: 27.08%, myexe:12.44%！
#bug: tweety 尾巴没能被身体遮挡，身体对尾巴也一样！应该暗的地方显出好似没有被遮挡的亮光。
这些本不该亮的顶点位于SSVis>3的地方。表明transport的预计算中，第一遍incr

0522 matlab里[u s v] = svd(全正实数对称mat）或svds（mat，32）的结果都是：s全正递减，u和v可能差一符号where s is also 正！并非[WangRui Eg04]所说
texture2D shader里的半象素问题：vs传下来的gl_Texcoord[0]，需要用tc' = tc - 0.5/res加以修正，res为纹理的分辨率。
结果导致画出的纹理2d image，若用0.0~1.0递增的test 1k*1的2d纹理以行连续的方式填满此image，则每一行开头比上一行反而小一些。
最后，用GL_TEXTURE_RECTANGLE_ARB和shader里textureRect(samplerRect, ivec)解决了.


0521 +25的svd逼近效果不如-25的

0519上午做出cubemap
中午睡觉、洗澡、剃须
下午做出其他补充，交帐
晚上买mp3，看片，听音乐会
#g所有6个面都值一样，总在[0,1]之间：纹理读得不对！

0518
shader's texSample2D doesn't work? 都是黑的。如果不用sampler，而自己指定颜色或将纹理坐标作为颜色，则都对
原因：sendUniform1i("mytex", 当前的texstagestate是第几层); bindtexture(gen出来的东西,作为下一句mesh的纹理）；再drawMesh()
现在用shader了，需要同时bind多于一张：ActiveTexture(0), bind(tex0), active(1), bind(1)：这是同时bind。
而以前的bind(tex0),bind(tex1)：这同时只有1张texture！
#怎么都不对，错误竟是：没有打开注释的setuniform(side/res...)!!!shader都不提示这个uniform并未被初始化，倒！

0517
#invalid operation at readpixels(stencil/depth)? 
和DrawBuffer(ColorAtta)无关，和shader也无关
#in useprogram(shaderobj) and use(0) between: can't glEnable()!!

#dump出的color（ni）全白：没经过shader
#经过shader，但color assigned 2nd value错了：可能全黑，或任意颜色
#invalid_FB_operation_EXT, glError code #1286:可能是NVidia显卡需要把glTexImage2D的wrap写成clamp_to_edge,而非clamp。！！！
#FB_IsValid()函数里面要填cout，否则默认ostr=cerr不会输出到console里！！
#别再忘了：当shader说"can't find uniform.."时，其实是shader没有用此变量导致的!!


0515
???

0511
#将txtfile读入string的方式：ifstream.read(string, seek(end)-seek(begin))，或ifstream.getline(string,EOF)

0510
#error C2065: 'FramebufferObject' : undeclared identifier，明明已经include了FBO.h： 须将stdafx.h第一个include
#minmin说cerr和cout一样，但我结果不一样：cout<<可以到console里，cerr不行。
#ostream是cout的基类

0509, 周二
plan:
1. SubsurfLookat: FBO 代替glReadPixels
2. SubsurfBlend: blend 在texture里(1 day)
test: GetErrorString，box简单mesh，必要时dump

PRT error LNK2001: unresolved external symbol __imp____glewDeleteFramebuffersEXT
要include lib，在#pragma comment或project property->linker->input->Additional Dependencies里加


0508
读了Orange Book，对glsl有了初步印象。
目标：按照[wang05]，把相关c++程序改为glsl程序
1.SSIso using glsl:
用FBO代替glReadPixels（导入内存，用cpu blend）

2.SSAniso using glsl:
同SSIso一样得到vis,xp,normal
g,h存为cubemap texture，prec时查找gk，render时查找hk
multiple render targets来同时得到k个T1k

3.ComputeSaveT1除了小波之外的整个工作都在shader里做



0427:
todo:换显卡，加速
glsl texturefloat

0426:
#纹理坐标，让大mesh有纹理
#换显卡，加速


0425
没有画出texture，原因：没有glEnable(Texture2D)
画出texture，但大mesh画不上。原因：坐标不对。


0424
矢量要化到一个局部坐标系里，要乘以这个局部坐标系矩阵的逆转置！！！（对arcball的旋转矩阵来说，旋转矩阵的逆就是其转置，从而逆转置就是转置的转置，即自身，所以矢量乘以旋转矩阵即可）

specular:
1,filter cube map, save to filtermap; test：rendercubemap到pfm。
2,find vNew-eyeNew 关于normalNew的反射方向spec，得到此方向的filtermap上的colorNew，加到此顶点color上。
test：1，关掉color，用未filter的，得到镜面效果
2，关掉color，用filter的，得到filter镜面效果
3，开color，用filter的，得到有translucent的filter镜面效果


0421
计时
断点续算


0420
tomorrow todo:
8:30 breakfast
12:30-1:30 nap
9:00pm-10:00 pingpong
11:30depart company
12:30sleep
discuss massively


0419
不学无术又损人
bug fixed, svd is qualified
to do: 
#texture
#debug forward and backward scattering
#specular
#svd 32x32x6: can't do this. so 16X16

0418
bug:动光就串色

0414
todo
#replace all "new"s with vector
#download compere mp3
#borrow mp3.....

0413
todo
-1:00: HG rms 分析；
-2:00: HG 应用。

0412
1.bug
2.acce

0410
2pass, 256Td, eps0.01, leaf1, time: 11m
#都是黑斑：可能是transRadiance最后一步的循环里Transport写错了！（今天我错了2次，2个大bug）

0409
calc precomputed thing（Td，E） should be seperated from Loading them to memory
Even when in the small mesh phase should think of big mesh things, or u will redo them.
eps0: Td: 30s/100verts, visibs:也很慢，可加速


0408
早晨在公司前差点被车轧，因为我不让路，她也不让。
研究之道：先找到精确解，再找到近似解。有时需循环往复。如dipole为近似，但其之前是准确的diffusion物理方程。基石必须是solid的、确凿无疑的，实现的近似才能有所依托。另一方面，实现若不近似是不可能的，必须在原则性中有高度的灵活性。

0407
2-pass写出来

0406
结束失眠。
建立kd tree。

0405
继续失眠。Normal用color画出来，需要+1 /2。转回normal时*2-1.
importance sample: 多一些，透明与不透的边界更连续、更干净。4时：不clean，not smooth
SS milestone achieved

0404
没有找到什么bug。失眠让一切悲惨。

0403
#glulookat(up)up要normalize！eye=v, center=n-v, eye可用v-n*epsilon，渲出来，所要的深度为viewport中心象素，w/2,h/2
#viewport开1*1有问题，还是开全。
#glOrtho()里的尺寸不能小于size，否则clip掉。near0，l/r/b/t/far为包围盒*根号3，保证哪里都看到。
#readpixel可用colormask加速。
#算normal：deep explore不好用。自己算。注意obj文件里没有vertex顺序的normal，所以要自己算。
#cullface(front）后glulookat内表面。

0401
#bug:一直读不出来stencil，昨晚到今早才发现setuppixelformat里没有设置stencil。
教训：重视错误提示！opengl的help是没有stencilbuffer，我却看到能识别stencilOp而不报错就以为是有stencilbuffer。
1.vis 求错了
2，size太小
对运算符重载不改变运算符的优先级和结合性

0331
#include <GL/glut.h>

#include <stdlib.h>

c:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\include\stdlib.h(256): error C2381: 'exit' : redefinition; __declspec(noreturn) differs
解决办法：调一下位置，把glut最后加。
#include <stdlib.h>

#include <GL/glut.h>


#stencil usage:
glstencilfunc(func,ref,mask): func: "pass if ref...stencil". e.g, ALWAYS means always pass, LESS means pass if ref<stencil

0330
bug: 在算法上没想清楚。想清楚算法比做、写都重要。
下一步：想想该怎么做。

0329
known issue: box的E都不相同，#0=#7, !=(#1~#6=)

错误总结（test with tweety)
无wave，都正确(Td,E)，为最终效果
有wave，用尽所有系数：
   #diffuse(E)：无>-0.1负值，
	pixelblur：有500-600小负值，
	envcube：无负值。
	ambient: 正确
	LCoef1: 错。
   #透明：
	pixelblur：视觉有大块，有500-800负值，其中有300-400大负值(<-0.1)；
	envmap：无负值，但视觉有大块，光路正确.
	ambient:脏，全无负值
	LCoef1:透明好。无负值
有wave,仅用256系数：
   #diffuse(E)：
	pixelblur：300-700负值，100左右大负值，效果可以接受
   	envcube：无负值。
	ambient:对，脏点被隐藏起来（灰图），全无负值。
	LCoef恒1：（马上暗很多）比ambient脏，尾巴上斑点很多。全是大负值。（全错）
   #透明:
	pixelblur:几乎全是大负值。
	envmap：无负值，但视觉有大块，光路正确
	ambient:有透明但有脏点，全无负值
	LCoef恒1:感觉对，全无负值。（Td无负？？！）
 
1, rewrite to transport lossless, light keepLoss
1. visib downsample
2, debug visib
1, arcball
1,实时调light数
2, obj.group


0328 test day: MS
#sizeof(int) == sizeof(float) == 4!!!
#Flux的缘故，第一次transport要算solid angle，但第二次不算。flux到第二次才用。since sig(wi*cos) = sig(wi)*cos, cos，可以提出来，到最后light里算即可。

#known bugs: 
))2.ambient has dark points. -> important!!! how???
))3.时而全黑，稍动一下又恢复
))LoadObj's group has changed. -> can't read multi objects. -> know how to fix.
))can't read multi objects. -> can't test bird's shadow. to fix ->know how.
))release can't calc visib, E and Td.

#possible bugs:
))1.visibility may have bug: use tet to print out pfm
))鼠标转光源方向难以控制

#assert: Release里面不执行这句话！！

0327 
fix negative T*L problem
fix initialize bug in wavelet, optimization has bug(2 places calls the same buffer)
#I should test each line I write. I should think of test all the way I write. I should test thoroughly till I believe it is ABSOLUTELY CORRECT.
#todo:
area-weighted selection in KeepLoss() for Transport, rather than Light(as Minmin says)
#fwrite(一个二维数组）出现assert的问题：重犯了：动态申请的，每一行内存不连续！需要每一行写一次！！

0326
#又有Cos bug： should >=0!!!老忘。多review代码，用小mesh从pipeline的头跟踪代码
#release算不出（存不了？）E和Td
#release even 算不出Vis
#11 load pfm后画出来cube全白（很亮），且调暗后仅为单色，貌似不支持cubemap？opengl1.3
# bunny34k/tweety31k can't calc Td, for it's too large(by test, >8min per 100verts. so>30hours)
#haar2D似乎没有问题了：test：全0.5的cubemap，做成每面只剩1个数16

bug left:
ambient为1时，还有坏点。查清为什么E还算出坏点，可以认为是E小波的结果。（扳为正?)

todo: 
#bird下加一板
#simplify dragon and bunny by qslim


0325
VecMultMat4写错为Inv了。至今不懂。不过有错就调之。

0324
tonight: 出结果
error LNK2005: already defined in .obj:头文件里不能写独立函数的实现！

bug: 
#pixelblur光源和亮的面不一致
#时而全黑，稍动一下又恢复
#凹model有杂色
#鼠标转光源方向难以控制
#板的两面，亮暗与光方向无关！！？

0323
#box第4个vert的E coef又是2.803e-045#DEN: dump coefIdx int->byte, little bug
旋转矩阵的逆矩阵即自己的转置！
current View dir：eye - vert*modelMat.inv*cubeMat.inv
#deb GI: use direct lighting first!!

to do:
#pixel_blur bug: 偶尔有黑面，两面都黑


0322
#texcoord + glvertex和texture的内存布局无关。对cubemap来说，只要每个顶点的坐标和其tex坐标能在cube上对上号，就可以了。
内存布局openglspec里有
#cube map对上号

0321:
#(unsigned int j = pfmH - 1; j >= 0; --j)错误！因unsigned int 过了0就是...
#textureCubeMap 坐标实时改变，env显示错误：在调。don't know: after i changed sth, it changed..
#将glTexImage2D的border从0改为1后：env无显示。why？ 

#to do:
2 draw cube: fix bug, not this
3 mat-1
4 current view Dir
6 add calc normal

0320:
rewrote loadpfm
then 13:00 rebuttal started...~~~><~~~~

0319 又是灰色; vis内存错

0318
1.先把map预采样到32*32，实时根据w或side,i,j找点（都很简单）。以后再实时采，并补边。
InverseMatrix4fT

2. V*n 4-term wavelet, as Td, L->l 4 term, to render diffuse day4.3

3. to do: Td should also be 3 * nVert size. lightCoef should also be. 

4 todo: template <>Haar2D

0317
#TransFunction ok. 
#修改drawscene为顶点列表:glxxPointer,glDrawElements.
#gluPerspective is P! glviewport is nothing! glulootat is both P and MV!
#printf(%d, f) 会弄乱整行！！不要用错%后的符号！
#fov
#遇到printf乱码，还要查看是否没有初始化！
#fixed bugs
#all but last, L

to do : Td 对称可利用
bunny mesh求normal（test 求normal code）
坐标scale
recode math.h

0316 breakpoint condition不好用！！
vpVertexNormals也从1开始！
#tested Haar2d using 2X2 mat.
#tested KeepLoss.
#.e file format: v coefs in float, then v coef_indices in int. indices are global(cubal) unique id.
#bug fixed: visib总不能画出来。发现其实用白mesh黑背景画出的mesh都是0为visible，255(1)为invisible，和我要用的正好相反。我弄反了。box是8个点都visible大部分，结果我都黑大部分，结果就错了。
#可视化 E: debug窗口中把E的128个值copy到txt，然后matlab：
[foo, e, foo] = textread('d:\Erange.txt', '%s %f %s');
[10, 0.27], 永远正负都有


0315 milestone: visibility all right!!! File format: 1, vis(v,side,i,j): vert*side*res^2*1byte. vert order follows the obj order; (side,i,j)'s order follows the atlas in the code.
2,visRatio(v): floats, vert*1float.
#add CCubemap class, change visibLightSide with its member
#change visib file of RGB 3byte to 1byte, .vsb suffix

#code 实现了Haar2D小波变换； matlab为
1d:[C,L] = wavedec(mat, level,'haar')

2d: [C, L] = wavedec2(mat, level,'haar') 
mat1 = waverec2(C, L,'haar')

[cA1,cH1,cV1,cD1] = dwt2(hehe,'haar');
#2d 尚未test！无好法

0314 忘了pColor += 3;补上去却又写错位置了，应到外层循环

0314
#潘明浩又解决了问题：
	glMatrixMode(GL_PROJECTION);
	glPushMatrix();
	glLoadIdentity();
	gluPerspective(90, 1, 0.01f, 100.0f);
记住：1，PushMatrix后面永远跟着LoadI！！！如果不是想合成当前矩阵的话。
2，Persp的arg1为角度，in degrees!!!!
3, 操作Matrix不要滥用！！越少越好！！！

#vis: 
glviewport不是view变换，不需load(Modelview)
任何mvp函数，如果用在错的matrixmode上，则会有不可预计的矩阵乘。如在glMatrixMode(ModelView)后跟一个projection函数gluperspective。
算vis的过程中间不能动projection；每次gluLookAt之前，必须把modelview loadI，否则矩阵会累积。
用OnkeyDown单步vis，实用。用triInside Box测，pass
用老办法，将vis%可视化

Opengl编程低级错误 
1.没有glDisable(GL_TEXTURE_2D),导致基本几何作图全部失败。
2.镜头位置没调好,导致所有物体不可见.
3.物体位置数据错误，导致物体大大超出镜头显示范围.
4.纹理没有GL_CLAMP导致边界拼接出现缝线.
5.纹理没有GL_REPEAT导致使用超出1.0纹理坐标技巧失败，显示单色插值.
6.没有glEnable(GL_TEXTURE_2D)导致全白纹理.
7.glEnable(GL_TEXTURE_2D)后没有使用纹理顶点导致如glColor效果的纯单色.
8.应该在作图循环设置灯光位置,因为The position is transformed by the modelview matrix when glLight is called (just as if it were a point), and it is stored in eye coordinates. 
9.灯光位置应该是4个float，3个float程序不出错，但结果完全扭曲。
10.打开灯光却没设置顶点法线，到头一场空。
11.Window Class 没有CS_OWNDC,导致glDrawPixels失败,如在子窗口View上进行象素写入操作.
12.没有设置PIXELFORMATDESCRIPTOR的cxxxxBits=xx,导致glReadPixels读取xxx通道数据失败,统统为无效值.
13.手动实现的多层纹理闪烁,出现线带,没有使用glPolygonOffset.
14.glDrawPixels格式GL_RGB或GL_BGR_EXT的数据时崩溃,且数据有效,没有使用glPixelStorei(GL_UNPACK_ALIGNMENT, 1);导致图像行默认4字节对齐,导致OpenGL数据读取越界崩溃.相应的要为glReadPixels设置glPixelStorei(GL_PACK_ALIGNMENT, 1);
15.glReadPixel读取被覆盖的OpenGL窗口部分的图像数据时,读出数据混乱无效,OpenGL Pixel Ownership检测导致,标准如此.使用PixelBuffer,或强制置前OpenGL窗口解决.
16.glReadPixels读取总是从FrameBuffer的左下往右上读取,毫无参数可设置改变方向,真是笨到家了. 载入图像一般还是从上到下比较容易理解.
17.使用glDepthMask(GL_FALSE)后不打开,glClear无法清除深度缓冲,导致现象:场景起始静止正常,一旦移动出现不规则的透明无渲染区域,深度缓存逻辑混乱.
18. gluPerspective(45.0f, (GLfloat)cxPixels/(GLfloat)cyPixels, 0.1f, 2000.0f);这里的0.1f将导致物体和地面的相交处闪烁,原因待查,至少取1.0f.
19.没有显示定义shiniess或shiniess为0,在shader中对gl_FrontMaterial.shininess使用pow计算,结果不可测,黑色条带闪烁，quite not understand.
20.纹理出现白色点状闪烁,没有Mipmap过滤导致!
21.任何初装的Windows系统,多好的机器,一开始对OpenGL只支持1.1,连多重纹理都没有,需要警惕这种机器,装着DX9,微软真恶心,::SwapBuffer直接崩溃,故需要检测显卡至少支持了1.2标准,否则要求更新显卡驱动程序. 


0313
*visibility总是四方块，solution：
	沿vert normal移出来一点（但不能大于gluperspective(z near)。outrude = 0.0001)
	关ztest，否则要有zclear
	drawmesh（v)里不画和v有关的tri（xins says不对！！！）
	debug：循环改为只绘一个点
	我1-3都没做，但4做了
*fixed bug：多swap了一遍。
*read进来打出bmp时lower-left问题。
*求vis一般框架：
	glDrawBuffer(Back);
	...drawmesh
	//debug时先画到front，即screen上，肉眼看一个vert的一个side是否没问题。所以要：
	swapbuffer;//debug时，将back换到front来，肉眼没问题就删掉这句，真正读，下句：
	glReadBufer(Back);//注意有了上句，这句就没用了。需改为front。但又有被桌面程序挡住的危险。

#测visibility：
测球
测有内部hole的
可视化normal：glcolor3f((norm+1)/2)
outrude vert along normal
危险：vpVertexNormal Vs. vpNormals
#颜色闪：未culling？no!!! gluPerspective(精度拉太大！！0.001-100才可以）
or, gluLookAt(z太远！）

0312
×jiajie. xin很好，“干脆”。有创新也不意味不放开自己。怕idea受挫不是理由，只是懦弱。
×glReadpixels（GL_RED,Uchar）想省读量（从RGBA到1/4），却读出203这样的灰色。mm疑为显卡bug

0311 
opengl右手系。
opengl里矩阵m[4][4]：先列后行，所以宜用m[16]。
view代码写在model之前（因为矩阵累积）
rotate(alpha,x,y,z)：obj绕矢量(x,y,z)逆时针旋转，是说眼睛“逆着”矢量(0,0,0)->(x,y,z）。而非顺着。这和物理里绕某矢量逆时针旋转同理：是右手法则，逆时针旋转。
opengl初始相机在右手系的-z轴上，朝着原点看。
今天都弄明白matrix、各旋转的数学理由了。

0311 看显卡caps，用dx sdk里的caps viewer。估计cg sdk也有类似
0311	在onpaint里做事，把ondraw整个封掉
0311闪屏：
问题是这样产生的.在OnEraseBkGnd中,如果你不调用原来缺省的OnEraseBkGnd只是重画背景则不会有闪烁.而在OnPaint里面, 由于它隐含的调用了OnEraseBkGnd,而你又没有处理OnEraseBkGnd函数,这时就和窗口缺省的背景刷相关了.缺省的OnEraseBkGnd操作使用窗口的缺省背景刷刷新背景(一般情况下是白刷),而随后你又自己重画背景造成屏幕闪动. 另外一个问题是OnEraseBkGnd不是每次都会被调用的.如果你 调用Invalidate的时候参数为TRUE,那么在OnPaint里面隐含 调用BeginPaint的时候就产生WM_ERASEBKGND消息,如果参数 是FALSE,则不会重刷背景. 
所以解决方法有三个半: 1.用OnEraseBkGnd实现,不要调用原来的OnEraseBkGnd函数. 2.用OnPaint实现,同时重载OnEraseBkGnd,其中直接返回. 3.用OnPaint实现,创建窗口时设置背景刷为空 4.用OnPaint实现,但是要求刷新时用Invalidate(FALSE)这样 的函数.(不过这种情况下,窗口覆盖等造成的刷新还是要闪一 下,所以不是彻底的解决方法) 都挺简单的. 

0310 svn：
1，建repository: program files\svn
2，右键svn，import原始数据，如d:\codes，此时svn会copy codes到自己的program files\svn下面
3，建工作目录working dir， 如d:\work，让work一直被svn管理
4，右键work，checkout（我用的是update）要被管理的那些文件，我选的是全部svn文件夹

1221: HDR kd, ks: r, g, b: wrong!  b, g, r!!

1207: bug1 fixed. 说到底还是“死死不肯看代码”（孙鑫）。再也不能这样！要先把算法了然于胸，然后用一个well-plan的挑剔的用例去测试，一定测得出来的！

1205: d:\codes\relighting\D3DRender\Console.h(4): error C2011: 'CConsole' : 'class' type redefinition
重编译

1118: D(i) = b(i) * (1 + alpha * C(i)); 应为D(:,i) = b(:,i) * (1 + alpha * C(i));
D(i)是矩阵第一个元素，而非第一列！！需要加：！！！

1118：每次循环完，如果需要重新计算B，则要clear， 否则不要clear，但脑子来分辩两者一定要clear！！！


1118： IterCoef(1: i)错误！！！ IterCoef(1,i)!!!

1121: 选任何数据，都要在报告里呈上不选其它数据的标准和理由，像paper一样正式
以后别放median了
50次迭代为上限
变化图列：第0,1,2,...10,20,30,...100帧的结果都要呈现
给0.3前100次的std
所有brdf的std
以后写了报告要上传，且一定要email里给出所有链接

1121: E(relative) ranges about[0,0.5], while E(rms) ranges about (0,0.25)

1122: matlab fopen('at') is append.

1124:周昆：“不要首先想着去defend yourself！！要先静下心来想一想，我讲得有没有道理！！！”

11.26 在这里，干不好不要哭，不要急，都没用。来这里，是为了先承认自己很烂，是个烂人，然后向所有人学习，show the fucking of human intelligence,绝对要有好的temper。否则就滚回任何地方。生活只有两种选择，要么win，要么die。

11.30 昨晚昏头，熬夜没用。今天能独立解决。想让matlab一晚上自己跑，结果早晨来发现没有停，但却好像刚开始跑。可能要临走时最大化窗口。

11.30: norm(mat)不是矩阵的norm！！！！！

12.1: mat =

    0.4416    0.1101    0.7172    0.2759
    0.7658    0.5535    0.7676    0.5909
    0.8769    0.2301    0.8043    0.6159

>> mat(1:2,:)'

ans =

    0.4416    0.7658
    0.1101    0.5535
    0.7172    0.7676
    0.2759    0.5909
表明：mat(1:2,:)'先取内部的前几行（列），再转置！！！

转置转错了，所以无损压缩可以RMSE＝0，而有损的压缩做不到，会很大！
